I have the following competitive programming problem that I want to show someone else. I will describe the problem below, please translate it into a brief description.

Strip off all the stories, legends, characters, backgrounds, examples, well-known definitions etc. from the statement while still enabling everyone to understand the problem. Also remove the name of the character if applicable. If it is not in Chinese translate it. Make it as succinct as possible while still being understandable. Try to avoid formulas and symbols. Abstract freely - for example, if the problem is about buying sushi, you can just phrase it as a knapsack problem. If necessary, mathjax ($...$) for math. Provide the *succinct* simplified statement directly without jargon. Answer me in Chinese Simplified.

翻译以下**全部 4 个**问题。

I.
======
# Mivik的神力

## 题目背景

$\textcolor{black}{\text{M}} \textcolor{red}{\text{ivik}}$发怒了，机房的$\textcolor{grey}{\text{deco}}$瑟瑟发抖

## 题目描述

$\textcolor{black}{\text{M}} \textcolor{red}{\text{ivik}}$要写一篇文章，在写文章时，他有$n$个备选的单词，第$i$个单词有一个长度$a_i$，$\textcolor{black}{\text{M}} \textcolor{red}{\text{ivik}}$可以选择从第$i$个单词开始写作，一共写$k$秒，第$j$秒会写上第$i+j-1(j\in[1,k])$个单词，并且他在写作时每秒都会获得愉悦值，第$j$秒的愉悦值为$max_{l=i}^{i+j-1} a_l$，现在，请你帮他算出，他每一次写作获得的愉悦值之和

**一句话题意：给出一个序列和多组询问 $(l,q)$ ，求**

$$
\sum_{i=l}^{l+q-1} \max_{l\le j\le i}a_j
$$

**数据要求强制在线**

## 输入格式

第一行，两个数，$n$，$t$，代表词汇个数和问题个数

第二行，$n$个数，第$i$个数代表$a_i$

接下来$t$行，每行两个数，$u$，$v$，$l=1+(u ⊕ lastans)\%n$，$q=1+(v ⊕ (lastans+1))\%(n-l+1)$，代表查询从第 $l$ 秒开始，写作 $q$ 秒的愉悦度之和

$lastans$表示上一次查询的答案，初始$lastans$为$0$

## 输出格式

对于每个询问，回答一行，代表答案

## 样例 #1

### 样例输入 #1

```
3 2
1 2 3
1 1
1 2
```

### 样例输出 #1

```
2
3
```

## 提示

**样例解释**

第一个询问 $1,1$，解密后得到 $l=2,q=1$ ，则按题意可得所求即为区间 $[2,2]$ 的最大值，为 $2$

第一个询问 $1,2$ ，解密后得到 $l=1,q=2$ ，则所求即为区间 $[1,1]$ 和区间 $[1,2]$ 的最大值之和，为 $3$

-----

对于$20\%$的数据，$n \leq 1000$，$t \leq 1000$

对于$100\%$的数据，$n\leq 500000$，$t\leq 500000$，$1 \leq a_i\leq 10^9(i\in [1,n])$
======

II.
======
# [COCI2019-2020#4] Holding

## 题目背景

Ivica 有一个由 $N$ 家克罗地亚公司组成的集团，但他的集团正面临着困难。他的企业承受着觉的负债，所以政府派遣律师没收了他的一切财产。

但我们发现，尽管他有巨额债务在身，他依然与政府达成协议，留住了部分企业。他留住的是哪些？我们也知道了。

## 题目描述

律师们把 Ivica 的公司的 $N$ 份债务文件摆在桌上。第一家公司的债务为 $A_1$ ，第二家公司的债务为 $A_2$ ，依次类推。

Ivica 与政府达成协议，使它留下桌上 $[L,R]$ 区间的所有文件所对应的公司，但他需要承担 $A_L,A_{L+1}\ldots A_R$ 的所有债务，其中 $L$ 和 $R$ 代表桌子上一系列文件中的位置。

幸运的是，律师们也是腐败。他们可以让他以 $|i-j|$ 的价格交换当前放在位置 $i$ 和位置 $j$ 的文件。

Ivica 有点绝望。他口袋里只有 $K$ 元钱，他现在想把这些钱花在这里，使得他的需要承担的债务尽可能少。

请帮他达成目标。

## 输入格式

第一行四个整数 $N,L,R,K$。

第二行 $N$ 个整数，第 $i$ 个表示 $A_i$。

## 输出格式

一行一个整数，表示花不超过 $K$ 元后负债的最小值。

## 样例 #1

### 样例输入 #1

```
3 2 2 1
1 2 3
```

### 样例输出 #1

```
1
```

## 样例 #2

### 样例输入 #2

```
5 2 3 3
21 54 12 2 0
```

### 样例输出 #2

```
12
```

## 样例 #3

### 样例输入 #3

```
6 4 6 100
1 2 3 4 5 6
```

### 样例输出 #3

```
6
```

## 提示

【数据规模与约定】

| 子任务编号 | 特殊限制         | 分值 |
| ---------- | ---------------- | ---- |
| $1$        | $N\le 13$，$R=N$ | $20$ |
| $2$        | $N\le 50$，$R=N$ | $30$ |
| $3$        | $N\le 50$        | $30$ |
| $4$        | 无特殊限制       | $20$ |

对于 $100\%$ 的数据，保证 $1\le N\le 100$，$1\le L\le R\le N$，$1\le K\le 10^4$，$1\le A_i\le 10^6$。

【提示与帮助】

**题目译自 [COCI 2019/2020](https://hsin.hr/coci/archive/2019_2020/) [CONTEST #4](https://hsin.hr/coci/archive/2019_2020/contest4_tasks.pdf) T3 Holding**

在 COCI 中，本题分值为 $110$ 分。
======

III.
======
# Blood Cousins

## 题面翻译

### 题面描述

有一个家族关系森林，描述了 $n$（$1\leq n\leq 10 ^ 5$）人的家庭关系，成员编号为 $1$ 到 $n$ 。

如果 $a$ 是 $b$ 的父亲，那么称 $a$ 为 $b$ 的 $1$ 级祖先；如果 $b$ 有一个 $1$ 级祖先，$a$ 是 $b$ 的 $1$ 级祖先的 $k-1$ 级祖先，那么称 $a$ 为 $b$ 的 $k$ 级祖先。

家庭关系保证是一棵森林，树中的每个人都至多有一个父母，且自己不会是自己的祖先。

如果存在一个人 $z$ ，是两个人 $a$ 和 $b$ 共同的 $p$ 级祖先：那么称 $a$ 和 $b$ 为 $p$ 级表亲。

$m$（$1\leq m\leq 10 ^ 5$）次询问，每次询问给出一对整数 $v$ 和 $p$，求编号为 $v$ 的人有多少个 $p$ 级表亲。

### 输入格式

第一个正整数 $n$ 表示家族里共有 $n$ 个人。

接下来一行 $n$ 个数 $r_1, r_2, \ldots, r_n$，表示 $r_i$ 是 $i$ 的父亲；如果 $r_i$ 为 $0$，那么 $i$ 就是根节点。

第三行一个整数 $m$ 表示询问数量。

接下来 $m$ 行，每行两个整数 $v_i$ 和 $p_i$，数字间用空格间隔；表示一组询问，即询问编号为 $v$ 的人有多少个 $p$ 级表亲。

保证输入合法。

### 输出格式

输出一行 $m$ 个数。对于每次询问，输出其答案。数字间用空格间隔。

## 题目描述

Polycarpus got hold of a family relationship tree. The tree describes family relationships of $ n $ people, numbered 1 through $ n $ . Each person in the tree has no more than one parent.

Let's call person $ a $ a 1-ancestor of person $ b $ , if $ a $ is the parent of $ b $ .

Let's call person $ a $ a $ k $ -ancestor $ (k&gt;1) $ of person $ b $ , if person $ b $ has a 1-ancestor, and $ a $ is a $ (k-1) $ -ancestor of $ b $ 's 1-ancestor.

Family relationships don't form cycles in the found tree. In other words, there is no person who is his own ancestor, directly or indirectly (that is, who is an $ x $ -ancestor for himself, for some $ x $ , $ x&gt;0 $ ).

Let's call two people $ x $ and $ y $ $ (x≠y) $ $ p $ -th cousins $ (p&gt;0) $ , if there is person $ z $ , who is a $ p $ -ancestor of $ x $ and a $ p $ -ancestor of $ y $ .

Polycarpus wonders how many counsins and what kinds of them everybody has. He took a piece of paper and wrote $ m $ pairs of integers $ v_{i} $ , $ p_{i} $ . Help him to calculate the number of $ p_{i} $ -th cousins that person $ v_{i} $ has, for each pair $ v_{i} $ , $ p_{i} $ .

## 输入格式

The first input line contains a single integer $ n $ $ (1<=n<=10^{5}) $ — the number of people in the tree. The next line contains $ n $ space-separated integers $ r_{1},r_{2},...,r_{n} $ , where $ r_{i} $ $ (1<=r_{i}<=n) $ is the number of person $ i $ 's parent or 0, if person $ i $ has no parent. It is guaranteed that family relationships don't form cycles.

The third line contains a single number $ m $ $ (1<=m<=10^{5}) $ — the number of family relationship queries Polycarus has. Next $ m $ lines contain pairs of space-separated integers. The $ i $ -th line contains numbers $ v_{i} $ , $ p_{i} $ $ (1<=v_{i},p_{i}<=n) $ .

## 输出格式

Print $ m $ space-separated integers — the answers to Polycarpus' queries. Print the answers to the queries in the order, in which the queries occur in the input.

## 样例 #1

### 样例输入 #1

```
6
0 1 1 0 4 4
7
1 1
1 2
2 1
2 2
4 1
5 1
6 1
```

### 样例输出 #1

```
0 0 1 0 0 1 1
```
======

IV.
======
# 【XR-4】复读

## 题目背景

**赛时提醒：当机器人在这棵完全二叉树的根时，执行 `U` 是非法的，即你需要保证不可能出现这种情况。**

**赛时提醒：这棵二叉树是无限向下延伸的，即所有节点均有左子节点与右子节点，除了根的所有节点均有父亲。**

## 题目描述

小 X 捡到了一台复读机，这台复读机可以向机器人发号施令。机器人将站在一棵完全二叉树的根上，完全二叉树是无限延伸的。你将向复读机录入一串指令，这串指令单个字符可以是：

* `L`：命令机器人向当前节点的左子走；
* `R`：命令机器人向当前节点的右子走；
* `U`：命令机器人向当前节点的父亲走（若没有，则命令非法）。

录入指令后，复读机将会把指令无限复读下去。比如命令为 `LR`，那么机器人会遵从 `LRLRLRLR...` 一直走下去。

这棵完全二叉树上有一个 $n$ 个节点的连通块，保证这个连通块包含根节点。连通块上的每个节点都埋有宝藏，机器人到达过的地方如果有宝藏，则会将其开采。如果一个地方没有宝藏，机器人也可以到那里去。机器人也可以反复经过一个地方。

显然，这个连通块本身也是一棵二叉树。

现在，有人告诉了小 X 埋有宝藏的这棵二叉树的前序遍历，小 X 需要寻找到一条尽量短的指令，使得机器人能够挖掘出所有宝藏。

## 输入格式

一行一个字符串，由 `0123` 中的字符组成，表示埋有宝藏的这棵二叉树的前序遍历。

* `0`：表示这是一个没有儿子的节点。
* `1`：表示这是一个只有左子的节点。
* `2`：表示这是一个只有右子的节点。
* `3`：表示这是一个既有左子又有右子的节点。

## 输出格式

一个整数，表示最短指令的长度。

## 样例 #1

### 样例输入 #1

```
1313000
```

### 样例输出 #1

```
3
```

## 样例 #2

### 样例输入 #2

```
333003003300300
```

### 样例输出 #2

```
15
```

## 提示

【样例 1 说明】

一种可行的最短指令为 `LRU`。

---

**本题采用捆绑测试。**

- Subtask 1（31 points）：$2 \le n \le 10$。
- Subtask 2（32 points）：$2 \le n \le 200$。
- Subtask 3（37 points）：无特殊限制。

对于 $100\%$ 的数据，$2 \le n \le 2 \times 10^3$。
======
